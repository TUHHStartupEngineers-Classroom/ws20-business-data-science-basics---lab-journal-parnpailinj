# create a small database. 
# The database should contain the model names and prices for at least one category. 

library(tidyverse) # Main Package - Loads dplyr, purrr, etc.
library(rvest)     # HTML Hacking & Web Scraping
library(xopen)     # Quickly opening URLs
library(jsonlite)  # converts JSON files to R objects
library(glue)      # concatenate strings
library(stringi)   # character string/text processing

library(tidyverse) # Main Package - Loads dplyr, purrr, etc.
library(rvest)     # HTML Hacking & Web Scraping
library(xopen)     # Quickly opening URLs
library(jsonlite)  # converts JSON files to R objects
library(glue)      # concatenate strings
library(stringi)   # character string/text processing


url_mtb <- "https://www.rosebikes.de/fahrr%C3%A4der/mtb"

xopen(url_mtb)

html_mtb <- read_html(url_mtb)

bike_tbl <- html_mtb %>%
  html_nodes(css = ".catalog-category-bikes__title-text") %>%
  html_text() %>% 
  stringr::str_replace_all(pattern = "\n", replacement = "") %>% 
  enframe(name = "position", value = "bike")

bike_tbl

price_tbl <- html_mtb %>%
  html_nodes(css = ".catalog-category-bikes__price-title") %>%
  html_text() %>%
  stringr::str_replace_all(pattern = "\nab ", replacement = "") %>%
  stringr::str_replace_all(pattern = "\n", replacement = "") %>%
  stringr::str_replace_all(pattern = "\200", replacement = "") %>%
  stringr::str_replace_all(pattern = ",00", replacement = "") %>%
  str_remove_all(pattern = "\\.")  %>%
  enframe(name = "position", value = "price")

price_tbl

left_join(bike_tbl,price_tbl)


